import DataObjects.DerbyTableWrapper;
import DataObjects.Product;
import DataObjects.Sale;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.LinkedList;
import java.util.List;

/**
 * will generate random Sales and Products records and put them into the derby table
 * Note that the derby database has memory, so this really only needs to be called locally once.
 * (especially for adding products)
 */
public class PharmacyDataGenerator {

    private List<Product> productList;

    // all categories used in generated products
    private enum Categories {
        Medicines,
        Vitamins,
        Dental,
        Beauty,
        Cosmetics
    }

    public PharmacyDataGenerator(){
        populateProductList();
    }

    /**
     * generates pharmacy-related sales
     * will clear our table beforehand (via delete + recreate)
     *
     * @param wrapper used to put data into table
     * @param numberOfRecords how many records to generate
     * @return true if successful
     */
    public boolean generateData(DerbyTableWrapper wrapper, int numberOfRecords){
        // delete and re-create tables for a fresh start. comment this out if you do not want to delete data.
        wrapper.deleteSalesTable();
        wrapper.deleteProductsTable();
        wrapper.createProductsTable();
        wrapper.createSalesTable();

        generateMoreData(wrapper, numberOfRecords);

        return true;
    }

    /**
     * This assumes the products are already in the table (ie - generateData has already been called)
     * Will generate more Sales records.
     *
     * Do not call this if you have not previously called generateData,
     * as otherwise the required products will not exist, and errors will probably occur
     *
     * @return true if successful
     */
    public boolean generateMoreData(DerbyTableWrapper wrapper, int numberOfRecords){
        // add products to products table
        for (Product p : productList)
            wrapper.addProduct(p);

        // generate random sale data and add to table, numberOfRecords times
        for (int i=0; i< numberOfRecords; i++){
            wrapper.addSale(generateRandomSale());
        }
        return true;
    }

    private Sale generateRandomSale(){

        String saleID = "SALE"+randBetween(1,9999);
        int productID = getRandomProductID();

        // date generation. Change this if you want a wider or smaller date range for data generation.
        String randomDateString = String.format("%02d-%02d-%04d", randBetween(1,28), randBetween(1,12), randBetween(2018,2019));
        //randBetween(1, 28) + "-"+randBetween(1,12) + "-" + randBetween(1997, 2019);

        int numberSold = randBetween(1, 12);
        Float amountPaid = numberSold * productList.get(productID-1).getPricePerUnit();

        // round amount paid to be 2 decimal places
        BigDecimal bd = new BigDecimal(amountPaid.toString());
        bd = bd.setScale(2, RoundingMode.HALF_UP);
        amountPaid = bd.floatValue();

        String saleStatus = "SOLD";
        // if 5% of sales get returned
        if (randBetween(1,100)<5)
            saleStatus = "RETURNED";

        Sale toReturn = new Sale(saleID, productID, randomDateString, numberSold, amountPaid, saleStatus);

        // get product category from product
        toReturn.setProductCategory(productList.get(productID-1).getProductCategory());
        return toReturn;
    }

    /**
     * generates a random ID, representing a product in productList
     * when they have been put into the table.
     *
     * @return
     */
    private int getRandomProductID(){
        // product ID will be autogenerated from 1 to the number of products
        // therefore, generate a random number between 1 and productList.size():
        return randBetween(1, productList.size());
    }

    // generates random number between (inclusive) start and end
    public static int randBetween(int start, int end) {
        return start + (int)Math.round(Math.random() * (end - start));
    }

    /**
     * populates product list with a bunch of products.
     * These will be added to table and referenced by sales
     */
    private void populateProductList(){
        // Kudos to chemist warehouse for the names and prices listed here
        // picked some random popular items from several categories
        productList = new LinkedList<>();

        // Category = "Medicines"
        productList.add(new Product("Panamax 500mg 100 tablets",
                Float.parseFloat("2.49"), Categories.Medicines.name()));
        productList.add(new Product("Nicorette Quit Smoking Mouth Spray",
                Float.parseFloat("52.99"), Categories.Medicines.name()));
        productList.add(new Product("Nurofen Ibuprofen Tablets",
                Float.parseFloat("14.99"), Categories.Medicines.name()));
        productList.add(new Product("Hayfever & Allergy Relief Tablets",
                Float.parseFloat("29.99"), Categories.Medicines.name()));
        productList.add(new Product("Telfast 180mg 70 Tablets",
                Float.parseFloat("29.99"), Categories.Medicines.name()));
        productList.add(new Product("Bosistos Eucalyptus Spray 200g",
                Float.parseFloat("11.99"), Categories.Medicines.name()));

        // Category = "Vitamins"
        productList.add(new Product("Calcium + Vitamin D 150 Tablets",
                Float.parseFloat("11.99"), Categories.Vitamins.name()));
        productList.add(new Product("Vitamin E Cream",
                Float.parseFloat("6.99"), Categories.Vitamins.name()));
        productList.add(new Product("Milk Calcium Kids 90 Capsules",
                Float.parseFloat("16.99"), Categories.Vitamins.name()));
        productList.add(new Product("Healthy Care CoEnzyme Q10 150mg",
                Float.parseFloat("33.99"), Categories.Vitamins.name()));
        productList.add(new Product("Healthy Care Fish Oil 1000mg",
                Float.parseFloat("12.99"), Categories.Vitamins.name()));
        productList.add(new Product("Swisse Ultiboost Liver Detox Tablets",
                Float.parseFloat("31.99"), Categories.Vitamins.name()));

        // Category = "Dental"
        productList.add(new Product("Listerine Total Care Mouthwash 1L",
                Float.parseFloat("11.99"), Categories.Dental.name()));
        productList.add(new Product("Colgate Cavity Protection Toothpaste",
                Float.parseFloat("1.99"), Categories.Dental.name()));
        productList.add(new Product("Reach Toothbrush - Firm",
                Float.parseFloat("2.99"), Categories.Dental.name()));
        productList.add(new Product("Colgate Toothbrush Medium 4 pack",
                Float.parseFloat("3.99"), Categories.Dental.name()));
        productList.add(new Product("Reach Dentotape Waxed 20m",
                Float.parseFloat("2.99"), Categories.Dental.name()));

        // Category = "Beauty"
        productList.add(new Product("Cetaphil Moisturising Cream 550g",
                Float.parseFloat("13.69"), Categories.Beauty.name()));
        productList.add(new Product("Liptember Bag 2019 Value Pack",
                Float.parseFloat("19.99"), Categories.Beauty.name()));
        productList.add(new Product("QV Gentle Wash 1.25kg",
                Float.parseFloat("17.99"), Categories.Beauty.name()));
        productList.add(new Product("Goat Soap 100g",
                Float.parseFloat("2.99"), Categories.Beauty.name()));
        productList.add(new Product("Makuna Honey Detoxifying Facial Mask",
                Float.parseFloat("18.99"), Categories.Beauty.name()));
        productList.add(new Product("Sudkin Foaming Facial Cleanser 125ml",
                Float.parseFloat("6.39"), Categories.Beauty.name()));
        productList.add(new Product("Hydro Boost Water Gel 50g",
                Float.parseFloat("12.49"), Categories.Beauty.name()));

        // Category = "Cosmetics"
        productList.add(new Product("Flower Petal Pout Lipstick",
                Float.parseFloat("9.99"), Categories.Cosmetics.name()));
        productList.add(new Product("Nude by Nature Brush Set",
                Float.parseFloat("33.49"), Categories.Cosmetics.name()));
        productList.add(new Product("Nude by Nature Mineral Cover Medium",
                Float.parseFloat("25.00"), Categories.Cosmetics.name()));
        productList.add(new Product("Rimmel 60 Seconds Nail Polish",
                Float.parseFloat("2.99"), Categories.Cosmetics.name()));
        productList.add(new Product("Rimmel Waterproof Eyeliner Black",
                Float.parseFloat("6.39"), Categories.Cosmetics.name()));
    }

}
